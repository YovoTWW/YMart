@using YMart.ViewModels.HomePage;
@using System.Text.Json;
@model HomePageViewModel

@{   
    ViewData["Title"] = "Home Page";
    var brochureDataJson = JsonSerializer.Serialize(Model.Brochures);  
}

<link rel="stylesheet" href="~/css/style.css" />
<link rel="stylesheet" href="~/css/products.css" />


<div class="text-center" style="margin-top:30px;margin-bottom:30px;">
    @*<h1 class="display-4">Welcome to YMart</h1>*@
    <img src="~/images/Welcome.png" style="width:1296px; height:350px;">
    <div id="slider-container" style="text-align:center;margin-top:30px;">
        <a id="brochure-link" href="#">
            <img id="brochure-image" src="" alt="Brochure Image" style="width:1296px; height:350px;" />
        </a>

    <div style="margin-top: 10px;">
            <button onclick="prevImage()" style="margin-right: 20px ; border-radius:0.25rem;"><i class="bi bi-arrow-bar-left"></i></button>
            <button onclick="nextImage()" style="border-radius:0.25rem;"><i class="bi bi-arrow-bar-right"></i></button>
    </div>
    </div>
</div>

<br />
<br />

@*<h2 style="background-image: url('/images/stylized_white.png');">Current Offers</h2>*@
<img src="~/images/Offers.png" style="width:450px; height:150px;margin-bottom:30px;">
<hr />

<div class="Product-Row">
    @foreach (var product in Model.Offers)
    {
        <div class="Product-Box">
            @if (product.DiscountedPrice < product.Price)
            {
                <div class="discount-badge">-@product.DiscountPercentage%</div>
            }
            <div class="card">
                @if (!string.IsNullOrEmpty(product.ImageURL))
                {
                    <img src="@product.ImageURL" class="card-img-top" alt="@product.Name">
                }
                else
                {
                    <img src="~/img/no-image-available-02.jpg" class="card-img-top" alt="No Image Available">
                }

                <div class="card-body">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text"
                       style="@(product.DiscountedPrice != product.Price ? "text-decoration: line-through; color: gray;" : "")">
                        Price: @product.Price.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("fr-FR"))
                    </p>
                    <p class="discount-text" id="dp-text"
                       style="@(product.DiscountedPrice == product.Price ? "visibility:hidden;" : "")">
                        Discounted Price: @product.DiscountedPrice.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("fr-FR"))
                    </p>
                    <div class="Buttons-Div">
                        <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" class="User-Buttons" id="cyan">Details</a>
                        @*@<a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" asp-route-returnController="@ViewContext.RouteData.Values["controller"]" asp-route-returnAction="@ViewContext.RouteData.Values["action"]" class="User-Buttons" id="cyan">Details</a>*@
                        @if (User?.Identity?.IsAuthenticated == true)
                        {
                            <form asp-controller="Product" asp-action="AddToCart" method="post">
                                <input type="hidden" name="id" value="@product.Id"  />
                                <input type="hidden" name="returnAction" value="@ViewContext.RouteData.Values["action"]" />
                                <input type="hidden" name="returnController" value="@ViewContext.RouteData.Values["controller"]" />
                                <button type="submit" class="User-Buttons" id="green"><i class="bi bi-cart"></i>Add to Cart</button>
                            </form>
                        }
                        else
                        {
                            <a asp-controller="Home" asp-action="NotSignedIn" class="User-Buttons" id="green-a"><i class="bi bi-cart"></i>Add to Cart</a>
                        }
                    </div>
                </div>
            </div>
            @if (product.Quantity <= 0)
            {
                <div class="out-of-stock-overlay">
                    <span>Out of Stock</span>
                </div>
            }
        </div>
    }
</div>

    @section Scripts {
        <script>
            const brochures = @Html.Raw(@brochureDataJson);
            let currentIndex = 0;

            function updateBrochure() {
                const current = brochures[currentIndex];
                const img = document.getElementById("brochure-image");
                const link = document.getElementById("brochure-link");

                img.src = current.ImageURL;

                // Build productNames query string
                const queryParams = current.ProductNames.map(p => `productNames=${encodeURIComponent(p)}`).join("&");
                link.href = `/Product/Index?${queryParams}`;
            }

            function nextImage() {
                currentIndex = (currentIndex + 1) % brochures.length;
                updateBrochure();
            }

            function prevImage() {
                currentIndex = (currentIndex - 1 + brochures.length) % brochures.length;
                updateBrochure();
            }

            // Initialize on load
            document.addEventListener("DOMContentLoaded", function () {
                updateBrochure();
            });
        </script>
    }

@if (TempData["ShowPopup"] != null && (bool)TempData["ShowPopup"])
{
    <script>
        alert("Item already in cart.");
    </script>
}
