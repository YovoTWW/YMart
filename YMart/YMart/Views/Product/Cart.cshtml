@using YMart.ViewModels.Product;
@model IEnumerable<BasicProductViewModel>

@{
    ViewData["Title"] = "Cart";
}

<link rel="stylesheet" href="~/css/cart.css" />
<link rel="stylesheet" href="~/css/cartResponsive.css" />

<div class="d-flex justify-content-between align-items-center mb-3" style="margin-top: 20px;">
    @if (User?.Identity?.IsAuthenticated ?? false)
    {
        <h2>@ViewData["Title"]</h2>
        <div class="Payment-Info">
            <h5>Total Items: <span id="totalItems">0</span></h5>
            <h5>Total Price: <span id="totalPrice">0 €</span></h5>
        </div>
    }
    else
    {
        <h2>Can only be viewed by Logged in Users</h2>
    }
</div>
<hr />


@if (User?.Identity?.IsAuthenticated ?? false)
{
    <form asp-controller="Product" asp-action="OrderConfirmation" method="post" id="purchaseForm">
    <div class="BUY-Button" style="margin-bottom:35px;">
        <button type="submit" class="btn btn-success">Purchase</button>
    </div>
    @foreach (var product in Model)
    {
            <div class="Product-Section">
            <div class="Image-Container">
                <img src="@(!string.IsNullOrEmpty(product.ImageURL) ? product.ImageURL : Url.Content("~/img/no-image-available-02.jpg"))" alt="@product.Name" />
            </div>

            <div class="Product-Info">
                <h6>Items in stock: @product.Quantity</h6>
                <h6>
                    Price per unit:
                    <span class="discounted-price productPrice"
                          data-price="@(product.DiscountedPrice < product.Price ? product.DiscountedPrice : product.Price)">
                        @((product.DiscountedPrice < product.Price ? product.DiscountedPrice : product.Price)
                            .ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("fr-FR")))
                    </span>
                </h6>
            </div>

            <div class="Product-Name">
                <h5>@product.Name</h5>
            </div>
                @if (product.Quantity > 0)
                {
                    <div class="Product-Quantity">
                        <h5>Quantity</h5>
                        <input type="hidden" name="ProductIds" value="@product.Id" />
                        <input id="quantity-input" type="number" name="Quantities" class="form-control quantityInput"
                        min="1" max="@product.Quantity" value="1" />
                    </div>

                    <div class="Product-Price">
                        <h5 class="lineTotal">0 €</h5>
                    </div>                  
                }

                <div class="RFC-Button">
                    <button type="submit"
                            formaction="@Url.Action("RemoveFromCart", "Product", new { id = product.Id })"
                            formmethod="post"
                            class="btn btn-danger">
                        Remove from Cart
                    </button>
                </div>
                @if (product.Quantity <= 0)
                {
                    <div class="out-of-stock-overlay">
                        <span>Out of Stock</span>
                    </div>
                }
        </div>
    }
    </form>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        function updateTotals() {
            let totalItems = 0;
            let totalPrice = 0;

            document.querySelectorAll(".Product-Section").forEach(section => {
                const quantityInput = section.querySelector(".quantityInput");
                if (!quantityInput) {
                    return; // skip this section if no quantity input
                }
                const priceElement = section.querySelector(".productPrice");
                const lineTotalElement = section.querySelector(".lineTotal");

                const unitPrice = parseFloat(priceElement.dataset.price);
                const quantity = parseInt(quantityInput.value) || 1;
                const itemTotal = unitPrice * quantity;

                totalItems += quantity;
                totalPrice += itemTotal;

                lineTotalElement.textContent = itemTotal.toLocaleString('fr-FR', { style: 'currency', currency: 'EUR' });
            });

            document.getElementById("totalItems").textContent = totalItems;
            document.getElementById("totalPrice").textContent = totalPrice.toLocaleString('fr-FR', { style: 'currency', currency: 'EUR' });
        }

        document.querySelectorAll(".quantityInput").forEach(input => {
            input.addEventListener("input", updateTotals);
        });

        updateTotals();
    });
</script>
