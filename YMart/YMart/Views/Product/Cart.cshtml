@using YMart.ViewModels.Product;
@model IEnumerable<BasicProductViewModel>

@{
    ViewData["Title"] = "Cart";
    int TotalItems = 0;
}

<div class="d-flex justify-content-between align-items-center mb-3" style="margin-top: 20px;">
    <h2>@ViewData["Title"]</h2>
</div>
<hr />

<style>
    .Product-Section{
        display:flex;
        flex-direction:row;
        padding-top:1rem;
        padding-bottom:1rem;
        margin-bottom:1.5rem;
        align-items:center;
        border-bottom: 1px solid #ccc;
    }

    .Image-Container{
        text-align:center;
        flex-grow:2;
    }

    .Image-Container img{
        max-width:100%;
        height:auto;
        max-height:100px;
        object-fit: contain;
    }

    .Product-Info{
        flex-grow:2;
        display:flex;
        flex-direction:column;
    }

    .Product-Name{
        flex-grow:3;
        text-align:left;
    }

    .Product-Quantity{
        flex-grow:2;
        display:flex;
        gap:1rem;
    }

    .Product-Quantity *{
        width:45%;
        margin-top:0;
        margin-bottom:0;
        padding:0px;
    }

    .Product-Quantity h5{
        text-align:right;
    }

    .Product-Price{
        flex-grow:1;
        text-align:center;
    }

    .Product-Name h5, .Product-Price h5,{
        margin-bottom:0 ;
    }

    .RFC-Button{
        flex-grow:2;
        text-align:right;
    }

</style>

<div class="Payment-Info">
    <h5>Total Items : @TotalItems</h5>
</div>

@foreach (var product in Model)
{
    <div class="Product-Section">
        <div class="Image-Container">
            @if (!string.IsNullOrEmpty(product.ImageURL))
            {
                <img src="@product.ImageURL"  alt="@product.Name" />
            }
            else
            {
                <img src="~/img/no-image-available-02.jpg"  alt="No Image Available" />
            }
        </div>
        <div class="Product-Info">
            <h6>Items in stock : @product.Quantity</h6>
            <h6>Price per unit : @product.Price.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("fr-FR"))</h6>
        </div>
        <div class="Product-Name">
            <h5>@product.Name</h5>
        </div>
        <div class="Product-Quantity">
            <h5>Quantity</h5>
            <input id="quantityInput" @*asp-for="Quantity"*@ class="form-control" aria-required="true" type="number" step="1" min="1" max="@product.Quantity" value="1" />
        </div>
        <div class="Product-Price">
            <h5 id="productPrice">@product.Price.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("fr-FR"))</h5>
        </div>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const quantityInput = document.getElementById("quantityInput");
                const priceElement = document.getElementById("productPrice");
                const pricePerUnit = @product.Price; // Injected from Razor

                function updatePrice() {
                    const quantity = parseInt(quantityInput.value) || 1;
                    const totalPrice = quantity * pricePerUnit;
                    priceElement.textContent = totalPrice.toLocaleString('fr-FR', { style: 'currency', currency: 'EUR' });
                    @TotalItems += quantity;
                }

                quantityInput.addEventListener("input", updatePrice);
            });
        </script>
        <div class="RFC-Button">
            <form asp-controller="Product" asp-action="RemoveFromCart" asp-route-id="@product.Id" method="post" style="display:inline;">
                <button type="submit" class="btn btn-danger">Remove from Cart</button>
            </form>
        </div>

    </div>
} 
